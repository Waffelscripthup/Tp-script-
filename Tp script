-- Load OrionLib
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

-- Create the main window
local Window = OrionLib:MakeWindow({
    Name = "Waffle Script Box",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionTest"
})

-- Show a welcome notification
OrionLib:MakeNotification({
    Name = "Welcome!",
    Content = "Thanks for using my script!",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- Create a Teleport tab
local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Helper function to get player names
local function getPlayerNames()
    local names = {}
    for _, player in ipairs(game.Players:GetPlayers()) do
        table.insert(names, player.Name)
    end
    return names
end

-- Create dropdown menus for player selection
local function createDropdowns()
    -- Dropdown for teleporting to a player
    TeleportTab:AddDropdown({
        Name = "Select Player to TP To",
        List = getPlayerNames(),
        Callback = function(playerName)
            local player = game.Players:FindFirstChild(playerName)
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetCFrame = player.Character.HumanoidRootPart.CFrame
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = targetCFrame
                print("Teleported to " .. playerName)
            else
                print("Player not found or has no character")
            end
        end
    })

    -- Dropdown for bringing a player to the local player
    TeleportTab:AddDropdown({
        Name = "Select Player to Bring",
        List = getPlayerNames(),
        Callback = function(playerName)
            local targetPlayer = game.Players:FindFirstChild(playerName)
            local localPlayer = game.Players.LocalPlayer

            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    -- Store the current position to prevent returning
                    local originalPosition = targetPlayer.Character.HumanoidRootPart.Position
                    targetPlayer.Character.HumanoidRootPart.CFrame = localPlayer.Character.HumanoidRootPart.CFrame

                    -- Prevent the player from returning to the original position
                    local function preventReturn()
                        while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
                            local currentPosition = targetPlayer.Character.HumanoidRootPart.Position
                            local localPosition = localPlayer.Character.HumanoidRootPart.Position

                            -- Check if the player is far from the local player
                            if (currentPosition - localPosition).magnitude > 10 then
                                break
                            end

                            -- Prevent returning to the original position
                            if (currentPosition - originalPosition).magnitude < 5 then
                                targetPlayer.Character.HumanoidRootPart.CFrame = localPlayer.Character.HumanoidRootPart.CFrame
                            end

                            wait(0.1) -- Adjust as needed
                        end
                    end

                    spawn(preventReturn)
                    print("Brought " .. playerName .. " to you and they cannot return to their old position")
                else
                    print("Local player character or HumanoidRootPart not found")
                end
            else
                print("Target player not found or has no character")
            end
        end
    })

    -- Dropdown for teleporting one player to another
    TeleportTab:AddDropdown({
        Name = "Select Source Player",
        List = getPlayerNames(),
        Callback = function(sourcePlayerName)
            local sourcePlayer = game.Players:FindFirstChild(sourcePlayerName)
            if sourcePlayer and sourcePlayer.Character and sourcePlayer.Character:FindFirstChild("HumanoidRootPart") then
                local sourceCFrame = sourcePlayer.Character.HumanoidRootPart.CFrame
                TeleportTab:AddDropdown({
                    Name = "Select Destination Player",
                    List = getPlayerNames(),
                    Callback = function(destinationPlayerName)
                        local destinationPlayer = game.Players:FindFirstChild(destinationPlayerName)
                        if destinationPlayer and destinationPlayer.Character and destinationPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            destinationPlayer.Character.HumanoidRootPart.CFrame = sourceCFrame
                            print("Teleported " .. destinationPlayerName .. " to " .. sourcePlayerName)
                        else
                            print("Destination player not found or has no character")
                        end
                    end
                })
            else
                print("Source player not found or has no character")
            end
        end
    })
end

-- Update dropdown lists
local function updateDropdowns()
    local playerNames = getPlayerNames()
    for _, dropdown in ipairs(TeleportTab:GetDropdowns()) do
        dropdown:UpdateList(playerNames)
    end
end

-- Initialize dropdowns and set up listeners
createDropdowns()
game.Players.PlayerAdded:Connect(function()
    wait(1) -- Delay to ensure players are fully loaded
    updateDropdowns()
end)
game.Players.PlayerRemoving:Connect(updateDropdowns)

-- Initial update
updateDropdowns()
